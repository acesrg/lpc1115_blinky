
Discarded input sections

 .text          0x0000000000000000        0x0 /tmp/ccbcapEu.o
 .data          0x0000000000000000        0x0 /tmp/ccbcapEu.o
 .bss           0x0000000000000000        0x0 /tmp/ccbcapEu.o
 .text          0x0000000000000000      0x130 /tmp/ccMkbqtH.o
 .data          0x0000000000000000        0x4 /tmp/ccMkbqtH.o
 .bss           0x0000000000000000        0x0 /tmp/ccMkbqtH.o
 .rodata        0x0000000000000000       0x40 /tmp/ccMkbqtH.o
 .debug_info    0x0000000000000000      0x4ac /tmp/ccMkbqtH.o
 .debug_abbrev  0x0000000000000000      0x133 /tmp/ccMkbqtH.o
 .debug_loc     0x0000000000000000       0xd1 /tmp/ccMkbqtH.o
 .debug_aranges
                0x0000000000000000       0x20 /tmp/ccMkbqtH.o
 .debug_line    0x0000000000000000      0x341 /tmp/ccMkbqtH.o
 .debug_str     0x0000000000000000      0x3f7 /tmp/ccMkbqtH.o
 .comment       0x0000000000000000       0x77 /tmp/ccMkbqtH.o
 .debug_frame   0x0000000000000000       0x38 /tmp/ccMkbqtH.o
 .ARM.attributes
                0x0000000000000000       0x2c /tmp/ccMkbqtH.o
 .text          0x0000000000000000        0x0 /tmp/ccNW48KU.o
 .data          0x0000000000000000        0x0 /tmp/ccNW48KU.o
 .bss           0x0000000000000000        0x0 /tmp/ccNW48KU.o

Memory Configuration

Name             Origin             Length             Attributes
MFlash64         0x0000000000000000 0x0000000000010000 xr
RamLoc8          0x0000000010000000 0x0000000000002000 xrw
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD /tmp/ccbcapEu.o
LOAD /tmp/ccMkbqtH.o
LOAD /tmp/ccNW48KU.o
                0x0000000000000000                __base_MFlash64 = 0x0
                0x0000000000000000                __base_Flash = 0x0
                0x0000000000010000                __top_MFlash64 = 0x10000
                0x0000000000010000                __top_Flash = 0x10000
                0x0000000010000000                __base_RamLoc8 = 0x10000000
                0x0000000010000000                __base_RAM = 0x10000000
                0x0000000010002000                __top_RamLoc8 = 0x10002000
                0x0000000010002000                __top_RAM = 0x10002000

.text           0x0000000000000000      0x1f8
 FILL mask 0xff
                0x0000000000000000                __vectors_start__ = ABSOLUTE (.)
 *(.isr_vector)
 .isr_vector    0x0000000000000000       0xc0 /tmp/ccNW48KU.o
                0x0000000000000000                g_pfnVectors
                0x00000000000000c0                . = ALIGN (0x4)
                0x00000000000000c0                __section_table_start = .
                0x00000000000000c0                __data_section_table = .
                0x00000000000000c0        0x4 LONG 0x1f8 LOADADDR (.data)
                0x00000000000000c4        0x4 LONG 0x10000000 ADDR (.data)
                0x00000000000000c8        0x4 LONG 0x0 SIZEOF (.data)
                0x00000000000000cc                __data_section_table_end = .
                0x00000000000000cc                __bss_section_table = .
                0x00000000000000cc        0x4 LONG 0x10000000 ADDR (.bss)
                0x00000000000000d0        0x4 LONG 0x0 SIZEOF (.bss)
                0x00000000000000d4                __bss_section_table_end = .
                0x00000000000000d4                __section_table_end = .
 *(.after_vectors*)
 .after_vectors
                0x00000000000000d4       0xac /tmp/ccNW48KU.o
                0x00000000000000d4                NMI_Handler
                0x00000000000000d8                HardFault_Handler
                0x00000000000000dc                SVC_Handler
                0x00000000000000e0                PendSV_Handler
                0x00000000000000e4                SysTick_Handler
                0x00000000000000e8                TIMER16_0_IRQHandler
                0x00000000000000e8                UART_IRQHandler
                0x00000000000000e8                TIMER32_0_IRQHandler
                0x00000000000000e8                TIMER32_1_IRQHandler
                0x00000000000000e8                IntDefaultHandler
                0x00000000000000e8                PIOINT1_IRQHandler
                0x00000000000000e8                CAN_IRQHandler
                0x00000000000000e8                SSP0_IRQHandler
                0x00000000000000e8                TIMER16_1_IRQHandler
                0x00000000000000e8                ADC_IRQHandler
                0x00000000000000e8                SSP1_IRQHandler
                0x00000000000000e8                PIOINT2_IRQHandler
                0x00000000000000e8                BOD_IRQHandler
                0x00000000000000e8                WAKEUP_IRQHandler
                0x00000000000000e8                PIOINT0_IRQHandler
                0x00000000000000e8                I2C_IRQHandler
                0x00000000000000e8                WDT_IRQHandler
                0x00000000000000e8                PIOINT3_IRQHandler
                0x00000000000000ec                ResetISR
                0x0000000000000158                data_init
                0x000000000000016c                bss_init
 *(.text*)
 .text.startup  0x0000000000000180       0x78 /tmp/ccbcapEu.o
                0x0000000000000180                main
 *(.rodata .rodata.* .constdata .constdata.*)
                0x00000000000001f8                . = ALIGN (0x4)

.glue_7         0x00000000000001f8        0x0
 .glue_7        0x00000000000001f8        0x0 linker stubs

.glue_7t        0x00000000000001f8        0x0
 .glue_7t       0x00000000000001f8        0x0 linker stubs

.vfp11_veneer   0x00000000000001f8        0x0
 .vfp11_veneer  0x00000000000001f8        0x0 linker stubs

.v4_bx          0x00000000000001f8        0x0
 .v4_bx         0x00000000000001f8        0x0 linker stubs

.iplt           0x00000000000001f8        0x0
 .iplt          0x00000000000001f8        0x0 /tmp/ccbcapEu.o

.rel.dyn        0x00000000000001f8        0x0
 .rel.iplt      0x00000000000001f8        0x0 /tmp/ccbcapEu.o

.ARM.extab
 *(.ARM.extab* .gnu.linkonce.armextab.*)
                0x00000000000001f8                __exidx_start = .

.ARM.exidx
 *(.ARM.exidx* .gnu.linkonce.armexidx.*)
                0x00000000000001f8                __exidx_end = .
                0x00000000000001f8                _etext = .

.uninit_RESERVED
                0x0000000010000000        0x0
 *(.bss.$RESERVED*)
                0x0000000010000000                . = ALIGN (0x4)
                0x0000000010000000                _end_uninit_RESERVED = .

.data           0x0000000010000000        0x0 load address 0x00000000000001f8
 FILL mask 0xff
                0x0000000010000000                _data = .
 *(vtable)
 *(.ramfunc*)
 *(.data*)
                0x0000000010000000                . = ALIGN (0x4)
                0x0000000010000000                _edata = .

.igot.plt       0x0000000010000000        0x0 load address 0x00000000000001f8
 .igot.plt      0x0000000010000000        0x0 /tmp/ccbcapEu.o

.bss            0x0000000010000000        0x0 load address 0x00000000000001f8
                0x0000000010000000                _bss = .
 *(.bss*)
 *(COMMON)
                0x0000000010000000                . = ALIGN (0x4)
                0x0000000010000000                _ebss = .
                [!provide]                        PROVIDE (end = .)

.noinit         0x0000000010000000        0x0 load address 0x00000000000001f8
                0x0000000010000000                _noinit = .
 *(.noinit*)
                0x0000000010000000                . = ALIGN (0x4)
                0x0000000010000000                _end_noinit = .
                [!provide]                        PROVIDE (_pvHeapStart = DEFINED (__user_heap_base)?__user_heap_base:.)
                0x0000000010002000                PROVIDE (_vStackTop = DEFINED (__user_stack_top)?__user_stack_top:(__top_RamLoc8 - 0x0))
                0xffffffffefffdd65                PROVIDE (__valid_user_code_checksum = (0x0 - (((_vStackTop + (ResetISR + 0x1)) + (DEFINED (NMI_Handler)?NMI_Handler:M0_NMI_Handler + 0x1)) + (DEFINED (HardFault_Handler)?HardFault_Handler:M0_HardFault_Handler + 0x1))))
OUTPUT(blinky.axf elf32-littlearm)

.debug_info     0x0000000000000000      0x845
 .debug_info    0x0000000000000000      0x4db /tmp/ccbcapEu.o
 .debug_info    0x00000000000004db      0x36a /tmp/ccNW48KU.o

.debug_abbrev   0x0000000000000000      0x2c7
 .debug_abbrev  0x0000000000000000      0x148 /tmp/ccbcapEu.o
 .debug_abbrev  0x0000000000000148      0x17f /tmp/ccNW48KU.o

.debug_aranges  0x0000000000000000       0x80
 .debug_aranges
                0x0000000000000000       0x20 /tmp/ccbcapEu.o
 .debug_aranges
                0x0000000000000020       0x60 /tmp/ccNW48KU.o

.debug_ranges   0x0000000000000000       0x98
 .debug_ranges  0x0000000000000000       0x30 /tmp/ccbcapEu.o
 .debug_ranges  0x0000000000000030       0x68 /tmp/ccNW48KU.o

.debug_line     0x0000000000000000      0x3bd
 .debug_line    0x0000000000000000      0x1f4 /tmp/ccbcapEu.o
 .debug_line    0x00000000000001f4      0x1c9 /tmp/ccNW48KU.o

.debug_str      0x0000000000000000      0x467
 .debug_str     0x0000000000000000      0x31e /tmp/ccbcapEu.o
                                        0x35b (size before relaxing)
 .debug_str     0x000000000000031e      0x149 /tmp/ccNW48KU.o
                                        0x206 (size before relaxing)

.comment        0x0000000000000000       0x76
 .comment       0x0000000000000000       0x76 /tmp/ccbcapEu.o
                                         0x77 (size before relaxing)
 .comment       0x0000000000000076       0x77 /tmp/ccNW48KU.o

.ARM.attributes
                0x0000000000000000       0x2c
 .ARM.attributes
                0x0000000000000000       0x2c /tmp/ccbcapEu.o
 .ARM.attributes
                0x000000000000002c       0x2c /tmp/ccNW48KU.o

.debug_frame    0x0000000000000000       0xe4
 .debug_frame   0x0000000000000000       0x2c /tmp/ccbcapEu.o
 .debug_frame   0x000000000000002c       0xb8 /tmp/ccNW48KU.o

.debug_loc      0x0000000000000000      0x396
 .debug_loc     0x0000000000000000      0x396 /tmp/ccNW48KU.o
